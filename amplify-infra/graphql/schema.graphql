type Note {
  id: ID!
  description: String!
  createdAt: String!
  creator: String!
  likes: [Like]
  comments: [Comment]
  score: Int!
  voteStatus: Boolean!
}

type Like {
  id: ID!
  noteId: ID!
  creator: String!
}

type Comment {
  id: ID!
  noteId: ID!
  creator: String!
  content: String!
}

input NoteInput {
  description: String!
  creator: String!
}

input UpdateNoteInput {
  description: String!
}

input UserCreateInput {
  email: String!
  password: String!
  admin: Boolean!
}

input addLikeInput {
  noteId: String!
  creator: String!
}

input addCommentInput {
  noteId: String!
  creator: String!
  content: String!
}

type Query {
  getNoteById(noteId: String!): Note
  listNotes: [Note]
  listNotesByDate(date: String!): [Note]
  getCommentsByNoteId(noteId: String!): [Comment]
}

type Mutation {
  createNote(note: NoteInput!): String
  deleteNote(noteId: String!, userId: String!): String
  createUser(user: UserCreateInput!): String
  addLike(like: addLikeInput!): String
  addComment(comment: addCommentInput!): String
}
